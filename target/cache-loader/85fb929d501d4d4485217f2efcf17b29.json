{"remainingRequest":"/Volumes/TamKieu/java/tk-registry/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Volumes/TamKieu/java/tk-registry/node_modules/ts-loader/index.js??ref--9-3!/Volumes/TamKieu/java/tk-registry/node_modules/angular-router-loader/src/index.js!/Volumes/TamKieu/java/tk-registry/node_modules/tslint-loader/index.js!/Volumes/TamKieu/java/tk-registry/src/main/webapp/app/home/home.component.ts","dependencies":[{"path":"/Volumes/TamKieu/java/tk-registry/src/main/webapp/app/home/home.component.ts","mtime":1564500078608},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/tslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nvar _a, _b, _c, _d, _e, _f, _g, _h, _j;\nconst core_1 = require(\"@angular/core\");\nconst ng_jhipster_1 = require(\"ng-jhipster\");\nconst shared_1 = require(\"app/shared\");\nconst admin_1 = require(\"app/admin\");\nconst registry_1 = require(\"app/registry\");\nconst shared_2 = require(\"app/shared\");\nconst app_constants_1 = require(\"app/app.constants\");\nconst eureka_status_service_1 = require(\"./eureka.status.service\");\nconst profile_service_1 = require(\"app/layouts/profiles/profile.service\");\nconst login_oauth2_service_1 = require(\"app/shared/oauth2/login-oauth2.service\");\nlet HomeComponent = class HomeComponent {\n    constructor(principal, loginModalService, loginOAuth2Service, eventManager, eurekaStatusService, applicationsService, healthService, profileService, refreshService) {\n        this.principal = principal;\n        this.loginModalService = loginModalService;\n        this.loginOAuth2Service = loginOAuth2Service;\n        this.eventManager = eventManager;\n        this.eurekaStatusService = eurekaStatusService;\n        this.applicationsService = applicationsService;\n        this.healthService = healthService;\n        this.profileService = profileService;\n        this.refreshService = refreshService;\n        this.version = app_constants_1.VERSION ? 'v' + app_constants_1.VERSION : '';\n        this.appInstances = [];\n    }\n    ngOnInit() {\n        this.principal.identity().then(account => {\n            this.account = account;\n            if (!account || !this.isAuthenticated()) {\n                this.login();\n            }\n            else {\n                this.refreshReloadSubscription = this.refreshService.refreshReload$.subscribe(empty => this.populateDashboard());\n                this.populateDashboard();\n            }\n        });\n        this.registerAuthenticationSuccess();\n    }\n    ngOnDestroy() {\n        if (this.refreshReloadSubscription) {\n            this.refreshReloadSubscription.unsubscribe();\n        }\n    }\n    registerAuthenticationSuccess() {\n        this.eventManager.subscribe('authenticationSuccess', message => {\n            this.principal.identity().then(account => {\n                this.account = account;\n                this.refreshReloadSubscription = this.refreshService.refreshReload$.subscribe(empty => this.populateDashboard());\n                this.populateDashboard();\n            });\n        });\n    }\n    isAuthenticated() {\n        return this.principal.isAuthenticated();\n    }\n    login() {\n        this.profileService.getProfileInfo().then(profileInfo => {\n            if (profileInfo.activeProfiles.indexOf('oauth2') > -1) {\n                this.loginOAuth2Service.login();\n            }\n            else {\n                this.modalRef = this.loginModalService.open();\n            }\n        });\n    }\n    populateDashboard() {\n        this.eurekaStatusService.findAll().subscribe(data => {\n            this.status = data.status;\n        });\n        this.applicationsService.findAll().subscribe(data => {\n            this.appInstances = [];\n            for (const app of data.applications) {\n                for (const inst of app.instances) {\n                    inst.name = app.name;\n                    this.appInstances.push(inst);\n                }\n            }\n        });\n        this.healthService.checkHealth().subscribe(response => {\n            this.healthData = this.healthService.transformHealthData(response);\n            this.updatingHealth = false;\n        }, response => {\n            this.healthData = this.healthService.transformHealthData(response.data);\n            this.updatingHealth = false;\n        });\n    }\n    baseName(name) {\n        return this.healthService.getBaseName(name);\n    }\n    subSystemName(name) {\n        this.healthService.getSubSystemName(name);\n    }\n    getBadgeClass(statusState) {\n        if (statusState === 'UP') {\n            return 'badge-success';\n        }\n        else {\n            return 'badge-danger';\n        }\n    }\n};\nHomeComponent = tslib_1.__decorate([\n    core_1.Component({\n        selector: 'jhi-home',\n        templateUrl: './home.component.html',\n        styleUrls: ['home.scss']\n    }),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof shared_1.Principal !== \"undefined\" && shared_1.Principal) === \"function\" ? _a : Object, typeof (_b = typeof shared_1.LoginModalService !== \"undefined\" && shared_1.LoginModalService) === \"function\" ? _b : Object, typeof (_c = typeof login_oauth2_service_1.LoginOAuth2Service !== \"undefined\" && login_oauth2_service_1.LoginOAuth2Service) === \"function\" ? _c : Object, typeof (_d = typeof ng_jhipster_1.JhiEventManager !== \"undefined\" && ng_jhipster_1.JhiEventManager) === \"function\" ? _d : Object, typeof (_e = typeof eureka_status_service_1.EurekaStatusService !== \"undefined\" && eureka_status_service_1.EurekaStatusService) === \"function\" ? _e : Object, typeof (_f = typeof registry_1.JhiApplicationsService !== \"undefined\" && registry_1.JhiApplicationsService) === \"function\" ? _f : Object, typeof (_g = typeof admin_1.JhiHealthService !== \"undefined\" && admin_1.JhiHealthService) === \"function\" ? _g : Object, typeof (_h = typeof profile_service_1.ProfileService !== \"undefined\" && profile_service_1.ProfileService) === \"function\" ? _h : Object, typeof (_j = typeof shared_2.JhiRefreshService !== \"undefined\" && shared_2.JhiRefreshService) === \"function\" ? _j : Object])\n], HomeComponent);\nexports.HomeComponent = HomeComponent;\n",{"version":3,"file":"/Volumes/TamKieu/java/tk-registry/src/main/webapp/app/home/home.component.ts","sourceRoot":"","sources":["/Volumes/TamKieu/java/tk-registry/node_modules/angular-router-loader/src/index.js!/Volumes/TamKieu/java/tk-registry/node_modules/tslint-loader/index.js!/Volumes/TamKieu/java/tk-registry/src/main/webapp/app/home/home.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { JhiEventManager } from 'ng-jhipster';\n\nimport { Account, LoginModalService, Principal } from 'app/shared';\nimport { JhiHealthService } from 'app/admin';\nimport { JhiApplicationsService } from 'app/registry';\nimport { JhiRefreshService } from 'app/shared';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { VERSION } from 'app/app.constants';\nimport { EurekaStatusService } from './eureka.status.service';\nimport { ProfileService } from 'app/layouts/profiles/profile.service';\nimport { LoginOAuth2Service } from 'app/shared/oauth2/login-oauth2.service';\n\n@Component({\n    selector: 'jhi-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['home.scss']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n    account: Account;\n    modalRef: NgbModalRef;\n    updatingHealth: boolean;\n    healthData: any;\n    appInstances: any;\n    status: any;\n    version: string;\n\n    refreshReloadSubscription: Subscription;\n\n    constructor(\n        private principal: Principal,\n        private loginModalService: LoginModalService,\n        private loginOAuth2Service: LoginOAuth2Service,\n        private eventManager: JhiEventManager,\n        private eurekaStatusService: EurekaStatusService,\n        private applicationsService: JhiApplicationsService,\n        private healthService: JhiHealthService,\n        private profileService: ProfileService,\n        private refreshService: JhiRefreshService\n    ) {\n        this.version = VERSION ? 'v' + VERSION : '';\n        this.appInstances = [];\n    }\n\n    ngOnInit() {\n        this.principal.identity().then(account => {\n            this.account = account;\n            if (!account || !this.isAuthenticated()) {\n                this.login();\n            } else {\n                this.refreshReloadSubscription = this.refreshService.refreshReload$.subscribe(empty => this.populateDashboard());\n                this.populateDashboard();\n            }\n        });\n\n        this.registerAuthenticationSuccess();\n    }\n\n    ngOnDestroy() {\n        if (this.refreshReloadSubscription) {\n            this.refreshReloadSubscription.unsubscribe();\n        }\n    }\n\n    registerAuthenticationSuccess() {\n        this.eventManager.subscribe('authenticationSuccess', message => {\n            this.principal.identity().then(account => {\n                this.account = account;\n                this.refreshReloadSubscription = this.refreshService.refreshReload$.subscribe(empty => this.populateDashboard());\n                this.populateDashboard();\n            });\n        });\n    }\n\n    isAuthenticated() {\n        return this.principal.isAuthenticated();\n    }\n\n    login() {\n        this.profileService.getProfileInfo().then(profileInfo => {\n            if (profileInfo.activeProfiles.indexOf('oauth2') > -1) {\n                this.loginOAuth2Service.login();\n            } else {\n                this.modalRef = this.loginModalService.open();\n            }\n        });\n    }\n\n    populateDashboard() {\n        this.eurekaStatusService.findAll().subscribe(data => {\n            this.status = data.status;\n        });\n\n        this.applicationsService.findAll().subscribe(data => {\n            this.appInstances = [];\n            for (const app of data.applications) {\n                for (const inst of app.instances) {\n                    inst.name = app.name;\n                    this.appInstances.push(inst);\n                }\n            }\n        });\n\n        this.healthService.checkHealth().subscribe(response => {\n                this.healthData = this.healthService.transformHealthData(response);\n                this.updatingHealth = false;\n            }, response => {\n                this.healthData = this.healthService.transformHealthData(response.data);\n                this.updatingHealth = false;\n            }\n        );\n    }\n\n    baseName(name: string) {\n        return this.healthService.getBaseName(name);\n    }\n\n    subSystemName(name: string) {\n        this.healthService.getSubSystemName(name);\n    }\n\n    getBadgeClass(statusState) {\n        if (statusState === 'UP') {\n            return 'badge-success';\n        } else {\n            return 'badge-danger';\n        }\n    }\n}\n"]}]}