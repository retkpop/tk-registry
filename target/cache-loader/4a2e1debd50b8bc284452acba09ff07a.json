{"remainingRequest":"/Volumes/TamKieu/java/tk-registry/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Volumes/TamKieu/java/tk-registry/node_modules/ts-loader/index.js??ref--9-3!/Volumes/TamKieu/java/tk-registry/node_modules/angular-router-loader/src/index.js!/Volumes/TamKieu/java/tk-registry/node_modules/tslint-loader/index.js!/Volumes/TamKieu/java/tk-registry/src/main/webapp/app/core/user/user.service.ts","dependencies":[{"path":"/Volumes/TamKieu/java/tk-registry/src/main/webapp/app/core/user/user.service.ts","mtime":1564500078607},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/tslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nvar _a;\nconst core_1 = require(\"@angular/core\");\nconst http_1 = require(\"@angular/common/http\");\nconst app_constants_1 = require(\"app/app.constants\");\nconst request_util_1 = require(\"app/shared/util/request-util\");\nlet UserService = class UserService {\n    constructor(http) {\n        this.http = http;\n        this.resourceUrl = app_constants_1.SERVER_API_URL + 'api/users';\n    }\n    create(user) {\n        return this.http.post(this.resourceUrl, user, { observe: 'response' });\n    }\n    update(user) {\n        return this.http.put(this.resourceUrl, user, { observe: 'response' });\n    }\n    find(login) {\n        return this.http.get(`${this.resourceUrl}/${login}`, { observe: 'response' });\n    }\n    query(req) {\n        const options = request_util_1.createRequestOption(req);\n        return this.http.get(this.resourceUrl, { params: options, observe: 'response' });\n    }\n    delete(login) {\n        return this.http.delete(`${this.resourceUrl}/${login}`, { observe: 'response' });\n    }\n};\nUserService = tslib_1.__decorate([\n    core_1.Injectable(),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" ? _a : Object])\n], UserService);\nexports.UserService = UserService;\n",{"version":3,"file":"/Volumes/TamKieu/java/tk-registry/src/main/webapp/app/core/user/user.service.ts","sourceRoot":"","sources":["/Volumes/TamKieu/java/tk-registry/node_modules/angular-router-loader/src/index.js!/Volumes/TamKieu/java/tk-registry/node_modules/tslint-loader/index.js!/Volumes/TamKieu/java/tk-registry/src/main/webapp/app/core/user/user.service.ts"],"names":[],"mappings":";;;;AAAA,wCAA2C;AAC3C,+CAAgE;AAGhE,qDAAmD;AACnD,+DAAmE;AAInE,IAAa,WAAW,GAAxB,MAAa,WAAW;IAGpB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,gBAAW,GAAG,8BAAc,GAAG,WAAW,CAAC;IAEZ,CAAC;IAExC,MAAM,CAAC,IAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED,MAAM,CAAC,IAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC1E,CAAC;IAED,IAAI,CAAC,KAAa;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,GAAG,IAAI,CAAC,WAAW,IAAI,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACxF,CAAC;IAED,KAAK,CAAC,GAAS;QACX,MAAM,OAAO,GAAG,kCAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC7F,CAAC;IAED,MAAM,CAAC,KAAa;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACrF,CAAC;CACJ,CAAA;AAzBY,WAAW;IADvB,iBAAU,EAAE;iEAIiB,iBAAU,oBAAV,iBAAU;GAH3B,WAAW,CAyBvB;AAzBY,kCAAW","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { createRequestOption } from 'app/shared/util/request-util';\nimport { User } from './user.model';\n\n@Injectable()\nexport class UserService {\n    private resourceUrl = SERVER_API_URL + 'api/users';\n\n    constructor(private http: HttpClient) {}\n\n    create(user: User): Observable<HttpResponse<User>> {\n        return this.http.post(this.resourceUrl, user, { observe: 'response' });\n    }\n\n    update(user: User): Observable<HttpResponse<User>> {\n        return this.http.put(this.resourceUrl, user, { observe: 'response' });\n    }\n\n    find(login: string): Observable<HttpResponse<User>> {\n        return this.http.get<User>(`${this.resourceUrl}/${login}`, { observe: 'response' });\n    }\n\n    query(req?: any): Observable<HttpResponse<User[]>> {\n        const options = createRequestOption(req);\n        return this.http.get<User[]>(this.resourceUrl, { params: options, observe: 'response' });\n    }\n\n    delete(login: string): Observable<HttpResponse<any>> {\n        return this.http.delete(`${this.resourceUrl}/${login}`, { observe: 'response' });\n    }\n}\n"]}]}