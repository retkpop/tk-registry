{"remainingRequest":"/Volumes/TamKieu/java/tk-registry/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Volumes/TamKieu/java/tk-registry/node_modules/ts-loader/index.js??ref--9-3!/Volumes/TamKieu/java/tk-registry/node_modules/angular-router-loader/src/index.js!/Volumes/TamKieu/java/tk-registry/node_modules/tslint-loader/index.js!/Volumes/TamKieu/java/tk-registry/src/main/webapp/app/shared/oauth2/login-oauth2.service.ts","dependencies":[{"path":"/Volumes/TamKieu/java/tk-registry/src/main/webapp/app/shared/oauth2/login-oauth2.service.ts","mtime":1564500078627},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/tslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nvar _a;\nconst core_1 = require(\"@angular/core\");\nconst http_1 = require(\"@angular/common/http\");\nconst app_constants_1 = require(\"app/app.constants\");\nconst operators_1 = require(\"rxjs/operators\");\nlet LoginOAuth2Service = class LoginOAuth2Service {\n    constructor(http) {\n        this.http = http;\n    }\n    login() {\n        let port = location.port ? ':' + location.port : '';\n        if (port === ':9000') {\n            port = ':8761';\n        }\n        let contextPath = location.pathname;\n        if (contextPath.endsWith('accessdenied')) {\n            contextPath = contextPath.substring(0, contextPath.indexOf('accessdenied'));\n        }\n        if (!contextPath.endsWith('/')) {\n            contextPath = contextPath + '/';\n        }\n        // If you have configured multiple OIDC providers, then, you can update this URL to /login.\n        // It will show a Spring Security generated login page with links to configured OIDC providers.\n        location.href = `//${location.hostname}${port}${contextPath}oauth2/authorization/oidc`;\n    }\n    logout() {\n        // logout from the server\n        return this.http.post(app_constants_1.SERVER_API_URL + 'api/logout', {}, { observe: 'response' }).pipe(operators_1.map((response) => {\n            return response;\n        }));\n    }\n};\nLoginOAuth2Service = tslib_1.__decorate([\n    core_1.Injectable(),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" ? _a : Object])\n], LoginOAuth2Service);\nexports.LoginOAuth2Service = LoginOAuth2Service;\n",{"version":3,"file":"/Volumes/TamKieu/java/tk-registry/src/main/webapp/app/shared/oauth2/login-oauth2.service.ts","sourceRoot":"","sources":["/Volumes/TamKieu/java/tk-registry/node_modules/angular-router-loader/src/index.js!/Volumes/TamKieu/java/tk-registry/node_modules/tslint-loader/index.js!/Volumes/TamKieu/java/tk-registry/src/main/webapp/app/shared/oauth2/login-oauth2.service.ts"],"names":[],"mappings":";;;;AAAA,wCAA2C;AAG3C,+CAAgE;AAEhE,qDAAmD;AACnD,8CAAqC;AAGrC,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAC3B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,KAAK;QACD,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QACpD,IAAI,IAAI,KAAK,OAAO,EAAE;YAClB,IAAI,GAAG,OAAO,CAAC;SAClB;QACD,IAAI,WAAW,GAAG,QAAQ,CAAC,QAAQ,CAAC;QACpC,IAAI,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE;YACtC,WAAW,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC,EAAE,WAAW,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;SAC/E;QACD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YAC5B,WAAW,GAAG,WAAW,GAAG,GAAG,CAAC;SACnC;QACD,2FAA2F;QAC3F,+FAA+F;QAC/F,QAAQ,CAAC,IAAI,GAAG,KAAK,QAAQ,CAAC,QAAQ,GAAG,IAAI,GAAG,WAAW,2BAA2B,CAAC;IAC3F,CAAC;IAED,MAAM;QACF,yBAAyB;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,8BAAc,GAAG,YAAY,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC,IAAI,CAClF,eAAG,CAAC,CAAC,QAA2B,EAAE,EAAE;YAChC,OAAO,QAAQ,CAAC;QACpB,CAAC,CAAC,CACL,CAAC;IACN,CAAC;CACJ,CAAA;AA5BY,kBAAkB;IAD9B,iBAAU,EAAE;iEAEiB,iBAAU,oBAAV,iBAAU;GAD3B,kBAAkB,CA4B9B;AA5BY,gDAAkB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Principal } from 'app/core/auth/principal.service';\nimport { AuthSessionServerProvider } from 'app/core/auth/auth-session.service';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class LoginOAuth2Service {\n    constructor(private http: HttpClient) {}\n\n    login() {\n        let port = location.port ? ':' + location.port : '';\n        if (port === ':9000') {\n            port = ':8761';\n        }\n        let contextPath = location.pathname;\n        if (contextPath.endsWith('accessdenied')) {\n            contextPath = contextPath.substring(0, contextPath.indexOf('accessdenied'));\n        }\n        if (!contextPath.endsWith('/')) {\n            contextPath = contextPath + '/';\n        }\n        // If you have configured multiple OIDC providers, then, you can update this URL to /login.\n        // It will show a Spring Security generated login page with links to configured OIDC providers.\n        location.href = `//${location.hostname}${port}${contextPath}oauth2/authorization/oidc`;\n    }\n\n    logout(): Observable<any> {\n        // logout from the server\n        return this.http.post(SERVER_API_URL + 'api/logout', {}, { observe: 'response' }).pipe(\n            map((response: HttpResponse<any>) => {\n                return response;\n            })\n        );\n    }\n}\n"]}]}