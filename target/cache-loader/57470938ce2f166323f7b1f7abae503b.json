{"remainingRequest":"/Volumes/TamKieu/java/tk-registry/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Volumes/TamKieu/java/tk-registry/node_modules/ts-loader/index.js??ref--9-3!/Volumes/TamKieu/java/tk-registry/node_modules/angular-router-loader/src/index.js!/Volumes/TamKieu/java/tk-registry/node_modules/tslint-loader/index.js!/Volumes/TamKieu/java/tk-registry/src/main/webapp/app/core/login/login.service.ts","dependencies":[{"path":"/Volumes/TamKieu/java/tk-registry/src/main/webapp/app/core/login/login.service.ts","mtime":1564500078606},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/tslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nvar _a, _b;\nconst core_1 = require(\"@angular/core\");\nconst principal_service_1 = require(\"app/core/auth/principal.service\");\nconst auth_jwt_service_1 = require(\"app/core/auth/auth-jwt.service\");\nlet LoginService = class LoginService {\n    constructor(principal, authServerProvider) {\n        this.principal = principal;\n        this.authServerProvider = authServerProvider;\n    }\n    login(credentials, callback) {\n        const cb = callback || function () { };\n        return new Promise((resolve, reject) => {\n            this.authServerProvider.login(credentials).subscribe(data => {\n                this.principal.identity(true).then(() => {\n                    resolve(data);\n                });\n                return cb();\n            }, err => {\n                this.logout();\n                reject(err);\n                return cb(err);\n            });\n        });\n    }\n    loginWithToken(jwt, rememberMe) {\n        return this.authServerProvider.loginWithToken(jwt, rememberMe);\n    }\n    logout() {\n        this.authServerProvider.logout().subscribe();\n        this.principal.authenticate(null);\n    }\n};\nLoginService = tslib_1.__decorate([\n    core_1.Injectable(),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof principal_service_1.Principal !== \"undefined\" && principal_service_1.Principal) === \"function\" ? _a : Object, typeof (_b = typeof auth_jwt_service_1.AuthServerProvider !== \"undefined\" && auth_jwt_service_1.AuthServerProvider) === \"function\" ? _b : Object])\n], LoginService);\nexports.LoginService = LoginService;\n",{"version":3,"file":"/Volumes/TamKieu/java/tk-registry/src/main/webapp/app/core/login/login.service.ts","sourceRoot":"","sources":["/Volumes/TamKieu/java/tk-registry/node_modules/angular-router-loader/src/index.js!/Volumes/TamKieu/java/tk-registry/node_modules/tslint-loader/index.js!/Volumes/TamKieu/java/tk-registry/src/main/webapp/app/core/login/login.service.ts"],"names":[],"mappings":";;;;AAAA,wCAA2C;AAE3C,uEAA4D;AAC5D,qEAAoE;AAGpE,IAAa,YAAY,GAAzB,MAAa,YAAY;IACrB,YAAoB,SAAoB,EAAU,kBAAsC;QAApE,cAAS,GAAT,SAAS,CAAW;QAAU,uBAAkB,GAAlB,kBAAkB,CAAoB;IAAG,CAAC;IAE5F,KAAK,CAAC,WAAW,EAAE,QAAS;QACxB,MAAM,EAAE,GAAG,QAAQ,IAAI,cAAY,CAAC,CAAC;QAErC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACnC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBACpD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBACpC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC;gBACH,OAAO,EAAE,EAAE,CAAC;YAChB,CAAC,EAAE,GAAG,CAAC,EAAE;gBACL,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,MAAM,CAAC,GAAG,CAAC,CAAC;gBACZ,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC,CACJ,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IAED,cAAc,CAAC,GAAG,EAAE,UAAU;QAC1B,OAAO,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;IACnE,CAAC;IAED,MAAM;QACF,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,SAAS,EAAE,CAAC;QAC7C,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;CACJ,CAAA;AA7BY,YAAY;IADxB,iBAAU,EAAE;iEAEsB,6BAAS,oBAAT,6BAAS,oDAA8B,qCAAkB,oBAAlB,qCAAkB;GAD/E,YAAY,CA6BxB;AA7BY,oCAAY","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Principal } from 'app/core/auth/principal.service';\nimport { AuthServerProvider } from 'app/core/auth/auth-jwt.service';\n\n@Injectable()\nexport class LoginService {\n    constructor(private principal: Principal, private authServerProvider: AuthServerProvider) {}\n\n    login(credentials, callback?) {\n        const cb = callback || function() {};\n\n        return new Promise((resolve, reject) => {\n            this.authServerProvider.login(credentials).subscribe(data => {\n                    this.principal.identity(true).then(() => {\n                        resolve(data);\n                    });\n                    return cb();\n                }, err => {\n                    this.logout();\n                    reject(err);\n                    return cb(err);\n                }\n            );\n        });\n    }\n\n    loginWithToken(jwt, rememberMe) {\n        return this.authServerProvider.loginWithToken(jwt, rememberMe);\n    }\n\n    logout() {\n        this.authServerProvider.logout().subscribe();\n        this.principal.authenticate(null);\n    }\n}\n"]}]}