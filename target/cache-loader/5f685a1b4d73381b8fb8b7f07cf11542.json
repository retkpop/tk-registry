{"remainingRequest":"/Volumes/TamKieu/java/tk-registry/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Volumes/TamKieu/java/tk-registry/node_modules/ts-loader/index.js??ref--9-3!/Volumes/TamKieu/java/tk-registry/node_modules/angular-router-loader/src/index.js!/Volumes/TamKieu/java/tk-registry/node_modules/tslint-loader/index.js!/Volumes/TamKieu/java/tk-registry/src/main/webapp/app/admin/logs/logs.component.ts","dependencies":[{"path":"/Volumes/TamKieu/java/tk-registry/src/main/webapp/app/admin/logs/logs.component.ts","mtime":1564500078598},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/tslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nvar _a, _b;\nconst core_1 = require(\"@angular/core\");\nconst log_model_1 = require(\"./log.model\");\nconst logs_service_1 = require(\"./logs.service\");\nconst shared_1 = require(\"app/shared\");\nlet LogsComponent = class LogsComponent {\n    constructor(logsService, routesService) {\n        this.logsService = logsService;\n        this.routesService = routesService;\n        this.filter = '';\n        this.orderProp = 'name';\n        this.reverse = false;\n    }\n    ngOnInit() {\n        this.loggers = [];\n        this.activeRouteSubscription = this.routesService.routeChanged$.subscribe(route => {\n            this.activeRoute = route;\n            this.displayActiveRouteLogs();\n        });\n        this.routesSubscription = this.routesService.routesChanged$.subscribe(routes => {\n            this.routes = routes;\n        });\n    }\n    changeLevel(name, level) {\n        if (this.activeRoute && this.activeRoute.status !== 'DOWN') {\n            this.logsService.changeInstanceLevel(this.searchByAppName(), name, level).subscribe(() => {\n                this.logsService.findInstanceAll(this.activeRoute).subscribe(response => this.extractLoggers(response));\n            });\n        }\n    }\n    searchByAppName() {\n        return this.routes.filter(route => {\n            return route.appName === this.activeRoute.appName;\n        });\n    }\n    extractLoggers(response) {\n        this.loggers = Object.entries(response.body.loggers)\n            .map(e => new log_model_1.Log(e[0], e[1]['effectiveLevel']));\n    }\n    displayActiveRouteLogs() {\n        this.updatingLogs = true;\n        if (this.activeRoute && this.activeRoute.status !== 'DOWN') {\n            this.logsService.findInstanceAll(this.activeRoute).subscribe(response => {\n                this.extractLoggers(response);\n                this.updatingLogs = false;\n            }, error => {\n                if (error.status === 503 || error.status === 500 || error.status === 404) {\n                    this.updatingLogs = false;\n                    if (error.status === 500 || error.status === 404) {\n                        this.routesService.routeDown(this.activeRoute);\n                    }\n                }\n            });\n        }\n        else {\n            this.routesService.routeDown(this.activeRoute);\n        }\n    }\n    ngOnDestroy() {\n        // prevent memory leak when component destroyed\n        this.activeRouteSubscription.unsubscribe();\n        this.routesSubscription.unsubscribe();\n    }\n};\nLogsComponent = tslib_1.__decorate([\n    core_1.Component({\n        selector: 'jhi-logs',\n        templateUrl: './logs.component.html'\n    }),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof logs_service_1.LogsService !== \"undefined\" && logs_service_1.LogsService) === \"function\" ? _a : Object, typeof (_b = typeof shared_1.JhiRoutesService !== \"undefined\" && shared_1.JhiRoutesService) === \"function\" ? _b : Object])\n], LogsComponent);\nexports.LogsComponent = LogsComponent;\n",{"version":3,"file":"/Volumes/TamKieu/java/tk-registry/src/main/webapp/app/admin/logs/logs.component.ts","sourceRoot":"","sources":["/Volumes/TamKieu/java/tk-registry/node_modules/angular-router-loader/src/index.js!/Volumes/TamKieu/java/tk-registry/node_modules/tslint-loader/index.js!/Volumes/TamKieu/java/tk-registry/src/main/webapp/app/admin/logs/logs.component.ts"],"names":[],"mappings":";;;;AAAA,wCAA6D;AAG7D,2CAAkC;AAClC,iDAA6C;AAE7C,uCAAqD;AAMrD,IAAa,aAAa,GAA1B,MAAa,aAAa;IAYtB,YAAoB,WAAwB,EAAU,aAA+B;QAAjE,gBAAW,GAAX,WAAW,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAkB;QACjF,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAC9E,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAClC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC7E,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW,CAAC,IAAY,EAAE,KAAa;QACnC,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,MAAM,EAAE;YACxD,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;gBACrF,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC5G,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YAChC,OAAO,KAAK,CAAC,OAAO,KAAK,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;QACpD,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,cAAc,CAAC,QAAQ;QAC7B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;aACjD,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,eAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,sBAAsB;QAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,MAAM,EAAE;YACxD,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBAChE,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;gBAC9B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC9B,CAAC,EAAE,KAAK,CAAC,EAAE;gBACP,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;oBACtE,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;oBAC1B,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;wBAC9C,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;qBAClD;iBACJ;YACL,CAAC,CACJ,CAAC;SACL;aAAM;YACH,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAClD;IACL,CAAC;IAED,WAAW;QACP,+CAA+C;QAC/C,IAAI,CAAC,uBAAuB,CAAC,WAAW,EAAE,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;IAC1C,CAAC;CACJ,CAAA;AA1EY,aAAa;IAJzB,gBAAS,CAAC;QACP,QAAQ,EAAE,UAAU;QACpB,WAAW,EAAE,uBAAuB;KACvC,CAAC;iEAamC,0BAAW,oBAAX,0BAAW,oDAAyB,yBAAgB,oBAAhB,yBAAgB;GAZ5E,aAAa,CA0EzB;AA1EY,sCAAa","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { Log } from './log.model';\nimport { LogsService } from './logs.service';\n\nimport { JhiRoutesService, Route } from 'app/shared';\n\n@Component({\n    selector: 'jhi-logs',\n    templateUrl: './logs.component.html'\n})\nexport class LogsComponent implements OnInit, OnDestroy {\n    loggers: Log[];\n    updatingLogs: boolean;\n    filter: string;\n    orderProp: string;\n    reverse: boolean;\n\n    activeRoute: Route;\n    routes: Route[];\n    activeRouteSubscription: Subscription;\n    routesSubscription: Subscription;\n\n    constructor(private logsService: LogsService, private routesService: JhiRoutesService) {\n        this.filter = '';\n        this.orderProp = 'name';\n        this.reverse = false;\n    }\n\n    ngOnInit() {\n        this.loggers = [];\n        this.activeRouteSubscription = this.routesService.routeChanged$.subscribe(route => {\n            this.activeRoute = route;\n            this.displayActiveRouteLogs();\n        });\n\n        this.routesSubscription = this.routesService.routesChanged$.subscribe(routes => {\n          this.routes = routes;\n        });\n    }\n\n    changeLevel(name: string, level: string) {\n        if (this.activeRoute && this.activeRoute.status !== 'DOWN') {\n            this.logsService.changeInstanceLevel(this.searchByAppName(), name, level).subscribe(() => {\n                this.logsService.findInstanceAll(this.activeRoute).subscribe(response => this.extractLoggers(response));\n            });\n        }\n    }\n\n    searchByAppName() {\n      return this.routes.filter(route => {\n        return route.appName === this.activeRoute.appName;\n      });\n    }\n\n    private extractLoggers(response) {\n      this.loggers = Object.entries(response.body.loggers)\n        .map(e => new Log(e[0], e[1]['effectiveLevel']));\n    }\n\n    displayActiveRouteLogs() {\n        this.updatingLogs = true;\n        if (this.activeRoute && this.activeRoute.status !== 'DOWN') {\n            this.logsService.findInstanceAll(this.activeRoute).subscribe(response => {\n                    this.extractLoggers(response);\n                    this.updatingLogs = false;\n                }, error => {\n                    if (error.status === 503 || error.status === 500 || error.status === 404) {\n                        this.updatingLogs = false;\n                        if (error.status === 500 || error.status === 404) {\n                            this.routesService.routeDown(this.activeRoute);\n                        }\n                    }\n                }\n            );\n        } else {\n            this.routesService.routeDown(this.activeRoute);\n        }\n    }\n\n    ngOnDestroy() {\n        // prevent memory leak when component destroyed\n        this.activeRouteSubscription.unsubscribe();\n        this.routesSubscription.unsubscribe();\n    }\n}\n"]}]}