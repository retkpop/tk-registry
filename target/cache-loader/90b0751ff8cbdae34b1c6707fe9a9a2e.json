{"remainingRequest":"/Volumes/TamKieu/java/tk-registry/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Volumes/TamKieu/java/tk-registry/node_modules/ts-loader/index.js??ref--9-3!/Volumes/TamKieu/java/tk-registry/node_modules/angular-router-loader/src/index.js!/Volumes/TamKieu/java/tk-registry/node_modules/tslint-loader/index.js!/Volumes/TamKieu/java/tk-registry/src/main/webapp/app/blocks/interceptor/notification.interceptor.ts","dependencies":[{"path":"/Volumes/TamKieu/java/tk-registry/src/main/webapp/app/blocks/interceptor/notification.interceptor.ts","mtime":1564500078603},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/tslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ng_jhipster_1 = require(\"ng-jhipster\");\nconst http_1 = require(\"@angular/common/http\");\nrequire(\"rxjs/add/operator/do\");\nclass NotificationInterceptor {\n    // tslint:disable-next-line: no-unused-variable\n    constructor(injector) {\n        this.injector = injector;\n        setTimeout(() => (this.alertService = injector.get(ng_jhipster_1.JhiAlertService)));\n    }\n    intercept(request, next) {\n        return next.handle(request).do((event) => {\n            if (event instanceof http_1.HttpResponse) {\n                const arr = event.headers.keys();\n                let alert = null;\n                let alertParams = null;\n                arr.forEach(entry => {\n                    if (entry.endsWith('app-alert')) {\n                        alert = event.headers.get(entry);\n                    }\n                    else if (entry.endsWith('app-params')) {\n                        alertParams = event.headers.get(entry);\n                    }\n                });\n                if (alert) {\n                    if (typeof alert === 'string') {\n                        if (this.alertService) {\n                            const alertParam = alertParams;\n                            this.alertService.success(alert, { param: alertParam }, null);\n                        }\n                    }\n                }\n            }\n        }, (err) => { });\n    }\n}\nexports.NotificationInterceptor = NotificationInterceptor;\n",{"version":3,"file":"/Volumes/TamKieu/java/tk-registry/src/main/webapp/app/blocks/interceptor/notification.interceptor.ts","sourceRoot":"","sources":["/Volumes/TamKieu/java/tk-registry/node_modules/angular-router-loader/src/index.js!/Volumes/TamKieu/java/tk-registry/node_modules/tslint-loader/index.js!/Volumes/TamKieu/java/tk-registry/src/main/webapp/app/blocks/interceptor/notification.interceptor.ts"],"names":[],"mappings":";;AAAA,6CAA8C;AAC9C,+CAA0G;AAG1G,gCAA8B;AAE9B,MAAa,uBAAuB;IAGhC,+CAA+C;IAC/C,YAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;QAClC,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,GAAG,CAAC,6BAAe,CAAC,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED,SAAS,CAAC,OAAyB,EAAE,IAAiB;QAClD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAC1B,CAAC,KAAqB,EAAE,EAAE;YACtB,IAAI,KAAK,YAAY,mBAAY,EAAE;gBAC/B,MAAM,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACjC,IAAI,KAAK,GAAG,IAAI,CAAC;gBACjB,IAAI,WAAW,GAAG,IAAI,CAAC;gBACvB,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBAChB,IAAI,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;wBAC7B,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;qBACpC;yBAAM,IAAI,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;wBACrC,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;qBAC1C;gBACL,CAAC,CAAC,CAAC;gBACH,IAAI,KAAK,EAAE;oBACP,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;wBAC3B,IAAI,IAAI,CAAC,YAAY,EAAE;4BACnB,MAAM,UAAU,GAAG,WAAW,CAAC;4BAC/B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE,IAAI,CAAC,CAAC;yBACjE;qBACJ;iBACJ;aACJ;QACL,CAAC,EACD,CAAC,GAAQ,EAAE,EAAE,GAAE,CAAC,CACnB,CAAC;IACN,CAAC;CACJ;AAnCD,0DAmCC","sourcesContent":["import { JhiAlertService } from 'ng-jhipster';\nimport { HttpInterceptor, HttpRequest, HttpResponse, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Injector } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\n\nexport class NotificationInterceptor implements HttpInterceptor {\n    private alertService: JhiAlertService;\n\n    // tslint:disable-next-line: no-unused-variable\n    constructor(private injector: Injector) {\n        setTimeout(() => (this.alertService = injector.get(JhiAlertService)));\n    }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).do(\n            (event: HttpEvent<any>) => {\n                if (event instanceof HttpResponse) {\n                    const arr = event.headers.keys();\n                    let alert = null;\n                    let alertParams = null;\n                    arr.forEach(entry => {\n                        if (entry.endsWith('app-alert')) {\n                            alert = event.headers.get(entry);\n                        } else if (entry.endsWith('app-params')) {\n                            alertParams = event.headers.get(entry);\n                        }\n                    });\n                    if (alert) {\n                        if (typeof alert === 'string') {\n                            if (this.alertService) {\n                                const alertParam = alertParams;\n                                this.alertService.success(alert, { param: alertParam }, null);\n                            }\n                        }\n                    }\n                }\n            },\n            (err: any) => {}\n        );\n    }\n}\n"]}]}