{"remainingRequest":"/Volumes/TamKieu/java/tk-registry/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Volumes/TamKieu/java/tk-registry/node_modules/ts-loader/index.js??ref--9-3!/Volumes/TamKieu/java/tk-registry/node_modules/angular-router-loader/src/index.js!/Volumes/TamKieu/java/tk-registry/node_modules/tslint-loader/index.js!/Volumes/TamKieu/java/tk-registry/src/main/webapp/app/shared/auth/has-any-authority.directive.ts","dependencies":[{"path":"/Volumes/TamKieu/java/tk-registry/src/main/webapp/app/shared/auth/has-any-authority.directive.ts","mtime":1564500078626},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Volumes/TamKieu/java/tk-registry/node_modules/tslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nvar _a, _b, _c;\nconst core_1 = require(\"@angular/core\");\nconst principal_service_1 = require(\"app/core/auth/principal.service\");\n/**\n * @whatItDoes Conditionally includes an HTML element if current user has any\n * of the authorities passed as the `expression`.\n *\n * @howToUse\n * ```\n *     <some-element *jhiHasAnyAuthority=\"'ROLE_ADMIN'\">...</some-element>\n *\n *     <some-element *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_USER']\">...</some-element>\n * ```\n */\nlet HasAnyAuthorityDirective = class HasAnyAuthorityDirective {\n    constructor(principal, templateRef, viewContainerRef) {\n        this.principal = principal;\n        this.templateRef = templateRef;\n        this.viewContainerRef = viewContainerRef;\n    }\n    set jhiHasAnyAuthority(value) {\n        this.authorities = typeof value === 'string' ? [value] : value;\n        this.updateView();\n        // Get notified each time authentication state changes.\n        this.principal.getAuthenticationState().subscribe(identity => this.updateView());\n    }\n    updateView() {\n        this.principal.hasAnyAuthority(this.authorities).then(result => {\n            this.viewContainerRef.clear();\n            if (result) {\n                this.viewContainerRef.createEmbeddedView(this.templateRef);\n            }\n        });\n    }\n};\ntslib_1.__decorate([\n    core_1.Input(),\n    tslib_1.__metadata(\"design:type\", Object),\n    tslib_1.__metadata(\"design:paramtypes\", [Object])\n], HasAnyAuthorityDirective.prototype, \"jhiHasAnyAuthority\", null);\nHasAnyAuthorityDirective = tslib_1.__decorate([\n    core_1.Directive({\n        selector: '[jhiHasAnyAuthority]'\n    }),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof principal_service_1.Principal !== \"undefined\" && principal_service_1.Principal) === \"function\" ? _a : Object, typeof (_b = typeof core_1.TemplateRef !== \"undefined\" && core_1.TemplateRef) === \"function\" ? _b : Object, typeof (_c = typeof core_1.ViewContainerRef !== \"undefined\" && core_1.ViewContainerRef) === \"function\" ? _c : Object])\n], HasAnyAuthorityDirective);\nexports.HasAnyAuthorityDirective = HasAnyAuthorityDirective;\n",{"version":3,"file":"/Volumes/TamKieu/java/tk-registry/src/main/webapp/app/shared/auth/has-any-authority.directive.ts","sourceRoot":"","sources":["/Volumes/TamKieu/java/tk-registry/node_modules/angular-router-loader/src/index.js!/Volumes/TamKieu/java/tk-registry/node_modules/tslint-loader/index.js!/Volumes/TamKieu/java/tk-registry/src/main/webapp/app/shared/auth/has-any-authority.directive.ts"],"names":[],"mappings":";;;;AAAA,wCAAgF;AAChF,uEAA4D;AAE5D;;;;;;;;;;GAUG;AAIH,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;IAGjC,YAAoB,SAAoB,EAAU,WAA6B,EAAU,gBAAkC;QAAvG,cAAS,GAAT,SAAS,CAAW;QAAU,gBAAW,GAAX,WAAW,CAAkB;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAG,CAAC;IAG/H,IAAI,kBAAkB,CAAC,KAAwB;QAC3C,IAAI,CAAC,WAAW,GAAG,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAS,KAAK,CAAC,CAAC,CAAC,CAAW,KAAK,CAAC;QACjF,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,uDAAuD;QACvD,IAAI,CAAC,SAAS,CAAC,sBAAsB,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;IACrF,CAAC;IAEO,UAAU;QACd,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAC3D,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;YAC9B,IAAI,MAAM,EAAE;gBACR,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aAC9D;QACL,CAAC,CAAC,CAAC;IACP,CAAC;CACJ,CAAA;AAfG;IADC,YAAK,EAAE;;;kEAMP;AAXQ,wBAAwB;IAHpC,gBAAS,CAAC;QACP,QAAQ,EAAE,sBAAsB;KACnC,CAAC;iEAIiC,6BAAS,oBAAT,6BAAS,oDAAuB,kBAAW,oBAAX,kBAAW,oDAAiC,uBAAgB,oBAAhB,uBAAgB;GAHlH,wBAAwB,CAqBpC;AArBY,4DAAwB","sourcesContent":["import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Principal } from 'app/core/auth/principal.service';\n\n/**\n * @whatItDoes Conditionally includes an HTML element if current user has any\n * of the authorities passed as the `expression`.\n *\n * @howToUse\n * ```\n *     <some-element *jhiHasAnyAuthority=\"'ROLE_ADMIN'\">...</some-element>\n *\n *     <some-element *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_USER']\">...</some-element>\n * ```\n */\n@Directive({\n    selector: '[jhiHasAnyAuthority]'\n})\nexport class HasAnyAuthorityDirective {\n    private authorities: string[];\n\n    constructor(private principal: Principal, private templateRef: TemplateRef<any>, private viewContainerRef: ViewContainerRef) {}\n\n    @Input()\n    set jhiHasAnyAuthority(value: string | string[]) {\n        this.authorities = typeof value === 'string' ? [<string>value] : <string[]>value;\n        this.updateView();\n        // Get notified each time authentication state changes.\n        this.principal.getAuthenticationState().subscribe(identity => this.updateView());\n    }\n\n    private updateView(): void {\n        this.principal.hasAnyAuthority(this.authorities).then(result => {\n            this.viewContainerRef.clear();\n            if (result) {\n                this.viewContainerRef.createEmbeddedView(this.templateRef);\n            }\n        });\n    }\n}\n"]}]}